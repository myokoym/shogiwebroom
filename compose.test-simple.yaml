# =================================
# ShogiWebRoom Simple Test Environment
# Docker Compose Configuration for Quick Testing
# =================================

services:
  # =================================
  # Redis Service (For Tests Only)
  # =================================
  redis:
    image: redis:7-alpine
    container_name: shogiwebroom-test-redis-simple
    command: >
      redis-server 
      --save "" 
      --appendonly no 
      --maxmemory 64mb 
      --maxmemory-policy allkeys-lru
      --loglevel warning
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 2s
      retries: 3
      start_period: 3s

  # =================================
  # Test Runner Service (Quick Tests)
  # =================================
  test:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: shogiwebroom-test-runner-simple
    environment:
      - NODE_ENV=test
      - REDIS_URL=redis://redis:6379
      - NODE_OPTIONS=--openssl-legacy-provider
      - TEST_MODE=minimal
      - CI=true
      - JEST_WORKERS=1  # Minimize resource usage
    volumes:
      # Mount source code for testing
      - .:/app:cached
      # Exclude node_modules from being overwritten
      - /app/node_modules
      # Exclude .nuxt directory
      - /app/.nuxt
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - test-network
    working_dir: /app
    # Default command for quick tests
    command: ["npm", "run", "test:quick"]

# =================================
# Test Network Configuration
# =================================
networks:
  test-network:
    driver: bridge
    name: shogiwebroom-test-simple-network

# =================================
# Usage Examples
# =================================
# Run quick tests:
#   docker compose -f compose.test-simple.yaml up test --abort-on-container-exit
#
# Run specific test suites:
#   docker compose -f compose.test-simple.yaml run --rm test npm run test:unit
#   docker compose -f compose.test-simple.yaml run --rm test npm run test:integration
#
# Clean test environment:
#   docker compose -f compose.test-simple.yaml down -v